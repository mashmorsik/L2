package main

import "fmt"

/*
Паттерн Посетитель

Паттерн «посетитель» является поведенческим паттерном проектирования,
предназначен для добавления новых операций в уже существующие структуры и
интерфейсы. Позволяет добавлять новые операции без изменения изначальной
структуры.

Плюсы:
- Упрощает добавление операций, работающих со сложными структурами объектов;
- Объединяет родственные операции в одном классе;
- Посетитель может накапливать состояние при обходе структуры элементов.

Минусы:
- Паттерн не оправдан, если иерархия элементов часто меняется;
- Может привести к нарушению инкапсуляции элементов.

Пример использования паттерна: Валидация данных.
*/

func main() {
	data := &Data{
		Username: "",
		Email:    "user@example.com",
		Password: "123434543",
	}

	validator := &ValidatorVisitor{}
	if err := Validate(*data, validator); err != nil {
		fmt.Println("Validation failed:", err)
	} else {
		fmt.Println("Data is valid")
	}
}
